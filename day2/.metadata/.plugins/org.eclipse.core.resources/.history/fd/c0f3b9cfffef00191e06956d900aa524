package com.priya;


import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.jboss.logging.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

@RestController
public class EmployController {

	
	private static final int PAGE_SIZE = 3;			// Number of rows to contain per page
	private long totalUsersCount;	
	

	@Autowired
	EmployRepository emprep;
	
	private PageRequest gotoPage(int page)
	{
		PageRequest request = new PageRequest(page,PAGE_SIZE,Sort.Direction.DESC,"id");
		return request;
	}

	@RequestMapping(value = "/")
	public ModelAndView getEmployees() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findAll());
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value = "/displayjavacontractors")
	public ModelAndView getjavacontractors() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findByDeptAndDesig("mech", "student"));
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value = "/displaystudents")
	public ModelAndView getstudents() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findByDesig("student"));
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value = "/displaymanagers")
	public ModelAndView getmanagers() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findByDesig("manager"));
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value = "/displaystudentswith5000moresalary")
	public ModelAndView getstudenthaving1000salary() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findByDesigAndSalary("student",1000));
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value = "/namestartswitha")
	public ModelAndView getdeptAndName() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findByDesigAndName("student"));
	 mv.setViewName("home");
	 return mv;
	
	}
	@RequestMapping(value = "/sortbydesig")
	public ModelAndView sortbydesig() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findAll(Sort.by("desig")));
	 mv.setViewName("home");
	 return mv;
	
	}
	@RequestMapping(value = "/sortbydesigdecending")
	public ModelAndView sortbydesigdesending() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findAll(Sort.by("desig").descending()));
	 mv.setViewName("home");
	 return mv;
	
	}
	@RequestMapping(value = "/sortbydeptandsalarydecending")
	public ModelAndView sortbydesigandsalarydesending() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.findAll(Sort.by("dept").descending().and(Sort.by("basic").descending())));
	 mv.setViewName("home");
	 return mv;
	
	}
	@RequestMapping(value = "/displaystudentssortsalarybydecending")
	public ModelAndView displaymanagerssortsalarybydecending() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.sortByDesig("student", "basic"));
	 mv.setViewName("home");
	 return mv;
	
	}
	@RequestMapping(value = "/sortByDesigdeptandname")
	public ModelAndView sortByDesigdeptandname() {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", emprep.sortByDesigdeptandname("student","basic"));
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value = "/displayAll/Page/{pageno}")
	public ModelAndView page1(@PathVariable("pageno")int pageno) {
	ModelAndView mv=new ModelAndView();
	 mv.addObject("employeeList", (emprep.findAll(PageRequest.of(pageno, 3)).getContent()));
	 mv.setViewName("home");
	 return mv;
	
	}
	
	@RequestMapping(value="/displayAll")
	public String index(Model model, HttpSession session, @RequestParam(value="pageNo", required=false, defaultValue = "0") String pageNo) {
	int lastPageNo;
	int gotoPageNo=Integer.parseInt(pageNo);
	Set<Employ> allUsers=new LinkedHashSet<Employ>();

		//session.setAttribute("currentPageNo", 0);

		for(Employ u:emprep.findAll(gotoPage(gotoPageNo)))			// fetches rows from DB as per Page No
		{
			allUsers.add(u);
		}


		totalUsersCount=emprep.count(); 			//total no of users
		if(totalUsersCount%PAGE_SIZE!=0)
		lastPageNo=(int)(totalUsersCount/PAGE_SIZE)+1;					// get last page No (zero based)
		else
		lastPageNo=(int)(totalUsersCount/PAGE_SIZE);


		model.addAttribute("lastPageNo",lastPageNo);					
		model.addAttribute("users",allUsers);
		return "index";
	}
	
}

